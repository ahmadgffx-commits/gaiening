name: AvicaRDP
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Auto restart every 6 hours

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 350  # Increased time limit
    
    steps:
      - name: Direct Avica Setup
        run: |
          Write-Host "🚀 Starting Avica setup directly..." -ForegroundColor Green
          
          # Download files directly
          Invoke-WebRequest -Uri "https://gitlab.com/userup908/my-rdp/-/raw/main/setup.py" -OutFile "setup.py"
          Invoke-WebRequest -Uri "https://download.avica.com/AvicaLite_v8.0.8.9.exe" -OutFile "Avica_setup.exe"
          Invoke-WebRequest -Uri "https://gitlab.com/userup908/my-rdp/-/raw/main/show.bat" -OutFile "show.bat"
          Invoke-WebRequest -Uri "https://gitlab.com/userup908/my-rdp/-/raw/main/loop.bat" -OutFile "loop.bat"
          
          # Install Python packages
          python.exe -m pip install requests pyautogui telegraph --quiet
          
          # Enable RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          
          # Set user password
          net user runneradmin TheDisa1a
          
          # Start Avica
          Write-Host "⚡ Starting Avica..." -ForegroundColor Yellow
          python -c "import pyautogui as pag; pag.click(897, 64, duration=2)" 2>$null
          Start-Process "Avica_setup.exe"
          
          # Run setup script
          python setup.py
          
          Write-Host "✅ Setup completed! Check for GoFile link!" -ForegroundColor Green
          
      - name: Setup System User
        run: |
          net user runneradmin TheDisa1a
          Write-Host "✅ System user configured" -ForegroundColor Green
          
      - name: Show Connection Info
        run: |
          Write-Host "
          ╔══════════════════════════════════════╗
          ║        AVICA RDP CONNECTION          ║  
          ╚══════════════════════════════════════╝
          
          📱 WhatsApp: +54
          👨‍💻 Created by 
          
          📋 Instructions:
          • Go to the GoFile link that will appear below
          • Get Avica ID and Password from there
          • Download Avica app and connect
          • GoFile link changes every time!
          
          ⏳ Waiting for GoFile link...
          " -ForegroundColor Cyan
          
      - name: Start Avica Service
        run: |
          Start-Process -FilePath "cmd.exe" -ArgumentList "/c show.bat" -WindowStyle Minimized -Wait
          Write-Host "✅ Avica service started. Check ID and Password!" -ForegroundColor Green

      - name: Keep Session Active
        run: |
          Start-Process -FilePath "cmd.exe" -ArgumentList "/c loop.bat" -WindowStyle Minimized
          Write-Host "🚀 Session active in the background. Look for ID and Password!" -ForegroundColor Yellow
          Start-Sleep -Seconds 30  # Give Avica time to fully load before screenshot

      - name: Capture and Upload Avica Screenshot
        run: |
          Write-Host "📸 Taking screenshot of Avica window..." -ForegroundColor Yellow
          
          # Take screenshot of full screen (captures Avica cleanly)
          Add-Type -AssemblyName System.Windows.Forms
          Add-Type -AssemblyName System.Drawing
          $screen = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds
          $bitmap = New-Object System.Drawing.Bitmap $screen.Width, $screen.Height
          $graphics = [System.Drawing.Graphics]::FromImage($bitmap)
          $graphics.CopyFromScreen(0, 0, 0, 0, $screen.Size)
          $graphics.Dispose()
          $bitmap.Save("avica_screenshot.png", [System.Drawing.Imaging.ImageFormat]::Png)
          $bitmap.Dispose()
          
          Write-Host "✅ Screenshot saved! Now uploading to GoFile..." -ForegroundColor Green
          
          # Upload to GoFile using simple form post (no API key needed)
          $boundary = [System.Guid]::NewGuid().ToString()
          $LF = "`r`n"
          $bodyLines = @(
              "--$boundary",
              "Content-Disposition: form-data; name=`"file`"; filename=`"avica_screenshot.png`"$LF",
              "Content-Type: image/png$LF$LF",
              [System.IO.File]::ReadAllBytes("avica_screenshot.png") -join $LF,
              "--$boundary--$LF"
          ) -join $LF
          
          $response = Invoke-RestMethod -Uri "https://gofile.io/uploadFiles" -Method Post -ContentType "multipart/form-data; boundary=$boundary" -Body ([System.Text.Encoding]::UTF8.GetBytes($bodyLines))
          
          # Extract the download page link from response
          $gofileLink = $response.data.downloadPage  # GoFile returns JSON with 'data.downloadPage'
          Write-Host "
          ╔══════════════════════════════════════╗
          ║          GOFiLE UPLOAD COMPLETE!     ║  
          ╚══════════════════════════════════════╝
          
          🔗 GoFile Link: $gofileLink
          
          📋 Instructions:
          • Click the link to view/download the screenshot
          • Get your fresh Avica ID & Password from the image
          • Connect via Avica app – new creds every 6 hours!
          " -ForegroundColor Cyan
